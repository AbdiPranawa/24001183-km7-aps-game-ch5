{
  "openapi": "3.0.0",
  "info": {
    "title": "Cars API",
    "version": "1.0.0",
    "description": "API for retrieving and managing car data"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "summary": "Retrieve a list of cars",
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Brand of the car to filter"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of cars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "isSuccess": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalData": {
                          "type": "integer"
                        },
                        "cars": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "brand": {
                                "type": "string"
                              },
                              "year": {
                                "type": "integer"
                              },
                              "userId": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new car",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "brand": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "userId": {
                    "type": "integer"
                  }
                },
                "required": ["name", "brand", "year", "userId"]
              }
            }
          },
          "responses": {
            "201": {
              "description": "Car created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "isSuccess": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "newCar": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "brand": {
                                "type": "string"
                              },
                              "year": {
                                "type": "integer"
                              },
                              "userId": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "isSuccess": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": ["object", "null"]
                      }
                    },
                    "example": {
                      "status": "Failed",
                      "message": "An unexpected error occurred",
                      "isSuccess": false,
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
